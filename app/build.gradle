apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.1"

    defaultConfig {
        applicationId "com.logicipher.mvvm"
        minSdkVersion 16
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        debug {
            buildConfigField("String", "BASE_URL", "\"http://www.mocky.io/v2\"")
            buildConfigField("String", "API_KEY", "\"ABCXYZ123TEST\"")
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField("String", "BASE_URL", "\"http://www.mocky.io/v2\"")
            buildConfigField("String", "API_KEY", "\"ABCXYZ123TEST\"")
        }
    }

    dataBinding {
        enabled = true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kapt {
        generateStubs = true
    }
}

ext {
    daggerVersion = "2.16"
    retrofitVersion = "2.2.0"
    butterknifeVersion = "8.8.1"
    mockitoVersion = "1.10.19"
    okHttpVersion = "3.7.0"
    rxJavaVersion = "2.2.0"
    rxAndroidVersion = "2.1.1"
    glideVersion = "3.7.0"
    espressoVersion = "3.0.1"
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.1'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'




    implementation "com.google.dagger:dagger:$daggerVersion"
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofitVersion"
    implementation "com.squareup.okhttp3:okhttp:$okHttpVersion"
    implementation "com.squareup.okhttp3:logging-interceptor:$okHttpVersion"
    implementation "io.reactivex.rxjava2:rxjava:$rxJavaVersion"
    implementation "io.reactivex.rxjava2:rxandroid:$rxAndroidVersion"
    implementation 'nl.littlerobots.rxlint:rxlint:1.7.4'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    implementation "com.github.bumptech.glide:glide:$glideVersion"
    implementation 'com.github.castorflex.smoothprogressbar:library:1.1.0'
    testImplementation 'junit:junit:4.13'
    androidTestImplementation "com.squareup.okhttp3:mockwebserver:$okHttpVersion"
    androidTestImplementation ('androidx.test.ext:junit:1.1.1') {
        exclude module: 'support-annotations'
    }
    androidTestImplementation ('androidx.test:rules:1.2.0') {
        exclude module: 'support-annotations'
    }
    androidTestImplementation ('androidx.test.espresso:espresso-core:3.2.0') {
        exclude module: 'support-annotations'
    }
    androidTestImplementation 'com.jakewharton.espresso:okhttp3-idling-resource:1.0.0'
    androidTestImplementation('androidx.test.espresso:espresso-contrib:3.2.0') {
        exclude module: 'support-annotations'
        exclude module: 'support-v4'
        exclude module: 'design'
        exclude module: 'recyclerview-v7'
    }

    kapt "com.google.dagger:dagger-compiler:$daggerVersion"
    testImplementation "org.mockito:mockito-core:$mockitoVersion"
    testImplementation 'com.squareup.okio:okio:1.15.0'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    androidTestImplementation 'org.mockito:mockito-android:2.22.0'
    kaptAndroidTest "com.google.dagger:dagger-compiler:$daggerVersion"
    kapt "com.google.dagger:dagger-android-processor:$daggerVersion"


    implementation 'com.google.dagger:dagger-android:2.16'
    implementation 'com.google.dagger:dagger-android-support:2.16'
    kapt "com.google.dagger:dagger-compiler:2.16"
    kapt "com.google.dagger:dagger-android-processor:2.16"

    def room_version = "2.2.5"
    def lifecycleVersion = '2.0.0'

    implementation "androidx.room:room-runtime:$room_version"
    annotationProcessor "androidx.room:room-compiler:$room_version" // For Kotlin use kapt instead of annotationProcessor

    // optional - Kotlin Extensions and Coroutines support for Room
    implementation "androidx.room:room-ktx:$room_version"

    // optional - RxJava support for Room
    implementation "androidx.room:room-rxjava2:$room_version"

    // optional - Guava support for Room, including Optional and ListenableFuture
    implementation "androidx.room:room-guava:$room_version"

    // Test helpers
    testImplementation "androidx.room:room-testing:$room_version"

    // view model
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycleVersion"
    annotationProcessor "androidx.lifecycle:lifecycle-compiler:$lifecycleVersion"

    kapt 'android.arch.persistence.room:compiler:1.1.1'

    implementation "org.koin:koin-android-architecture:0.8.2"


}